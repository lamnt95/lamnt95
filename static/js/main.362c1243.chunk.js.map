{"version":3,"sources":["App/Lib/uploadFile.js","App/Components/Header/index.js","App/Container/Hooks/useText.js","App/Container/index.js","App/Components/Markdown/Previewer/Loading.js","App/Components/Markdown/Previewer/ErrorBoundary.js","App/Components/Markdown/Previewer/index.js","App/Components/Markdown/Editor/MirrorEditor.js","App/Container/Hooks/InitialText.js","App/Components/Markdown/DragBar.js","App/Components/Markdown/Editor/index.js","App/Container/Hooks/useDrop.js","App/Components/Markdown/index.js","App/index.js","serviceWorkerRegistration.js","index.js"],"names":["val","document","querySelector","CodeMirror","setValue","styled","className","onClick","candidateTitle","candidateTitleEl","innerText","currentTitle","title","window","requestAnimationFrame","print","role","aria-label","useText","initialValue","useState","state","setState","TextContainer","Container","props","duration","ErrorBoundary","error","errorInfo","this","location","reload","style","background","padding","borderRadius","boxShadow","outline","cursor","children","React","Component","Wrapper","div","LazyPreview","lazy","source","fallback","Loading","setText","value","options","mode","theme","lineNumbers","lineWrapping","onChange","editor","data","width","setDrag","setStartX","onMouseDown","e","offsetX","nativeEvent","dragStart","isDrag","useDrop","ref","onLoad","uploading","setUploading","isOver","setOver","stopDefault","preventDefault","stopPropagation","useEffect","dragLeaveHandler","dragOverHandler","dropHandler","uploadHandler","dataTransfer","files","name","test","reader","FileReader","onload","target","result","readAsText","current","addEventListener","removeEventListener","active","SetActive","loading","SetLoading","items","setItems","useProvided","text","startX","innerWidth","setWidth","markdownRef","useRef","uploadFile","handleMouseUp","opacity","onMouseMove","pageX","console","log","db","listItems","_","map","it","index","key","id","markdown","date","get","open","link","DragBar","Previewer","inject","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootElement","getElementById","event","returnValue","ReactDOM","render","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.362c1243.chunk.js","sourcesContent":["export default val => {\r\n  document.querySelector('.CodeMirror').CodeMirror.setValue(val);\r\n};\r\n// Little dirty solution.","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UploadButton from \"./Upload.js\";\r\nconst Header = ({ className }) => {\r\n  const onTransfrom = () => {\r\n    // get the file name\r\n    let candidateTitle = \"\";\r\n    const previewEl = document.querySelector(\".preview\");\r\n    const candidateTitleEl = previewEl.querySelector(\"h1\");\r\n    if (candidateTitleEl) {\r\n      candidateTitle = candidateTitleEl.innerText;\r\n\r\n      // do the effect change the title\r\n      const currentTitle = document.title;\r\n      document.title = candidateTitle;\r\n      window.requestAnimationFrame(() => {\r\n        // schedule resume back in next frame\r\n        document.title = currentTitle;\r\n      });\r\n    }\r\n    window.print();\r\n  };\r\n  return (\r\n    <header className={className + \" no-print\"}>\r\n      {/* <p className=\"project\"> md2pdf </p>\r\n      <iframe\r\n        title=\"github-button\"\r\n        className=\"project\"\r\n        style={{ display: \"block\" }}\r\n        src=\"https://ghbtns.com/github-btn.html?user=realdennis&repo=md2pdf&type=star&count=true\"\r\n        frameBorder=\"0\"\r\n        scrolling=\"0\"\r\n        width=\"100px\"\r\n        height=\"20px\"\r\n      /> */}\r\n\r\n      <div className=\"menu\">\r\n        {/* <UploadButton className=\"button upload\" /> */}\r\n        <p className=\"button download\" onClick={onTransfrom}>\r\n          <span role=\"img\" aria-label=\"download\">\r\n            🎉\r\n          </span>\r\n          <span>PDF</span>\r\n        </p>\r\n      </div>\r\n      {/* <span className=\"author\">Powered by @realdennis</span> */}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default styled(Header)`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  flex-shrink: 0;\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n  user-select: none;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  color: black;\r\n  background-color: rgb(233, 233, 233);\r\n  display: flex;\r\n  align-items: center;\r\n  height: 40px;\r\n  .project {\r\n    font-weight: bold;\r\n    margin: 5px;\r\n    flex-shrink: 0;\r\n    height: 20px;\r\n  }\r\n  div.menu {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    .button {\r\n      height: 80%;\r\n      margin: 0;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 3px;\r\n      border-radius: 3px;\r\n      border: 1px solid black;\r\n      padding: 10px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  /* span.author {\r\n    position: fixed;\r\n    bottom: 2px;\r\n    left: 2px;\r\n    opacity: 0.5;\r\n    color: white;\r\n    height: 20px;\r\n    z-index:99;\r\n  } */\r\n  @keyframes dance {\r\n    0% {\r\n      transform: rotate(3deg);\r\n    }\r\n    100% {\r\n      transform: rotate(-2deg);\r\n    }\r\n  }\r\n`;\r\n","import  { useState } from \"react\";\r\nimport { initialText } from \"./InitialText.js\";\r\nconst useText = (initialValue = null) => {\r\n  const [state, setState] = useState(initialValue);\r\n  return [state, setState];\r\n};\r\nexport default useText;\r\n","import { Container } from 'nonaction';\r\nimport useText from './Hooks/useText.js';\r\nexport const TextContainer = Container(useText);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst unWrappedLoading = ({ className }) => {\r\n  return (\r\n    <div className={className}>\r\n      <p />\r\n      <p />\r\n      <p />\r\n    </div>\r\n  );\r\n};\r\nexport default styled(unWrappedLoading)`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  & > p {\r\n    margin: 5px;\r\n    width: 5px;\r\n    height: 15px;\r\n    border-radius: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: load;\r\n    animation-duration: ${props => props.duration + 's'};\r\n    &:nth-child(1) {\r\n      animation-delay: ${props => props.duration / 3 + 's'};\r\n    }\r\n    &:nth-child(2) {\r\n      animation-delay: ${props => (2 * props.duration) / 3 + 's'};\r\n    }\r\n  }\r\n  @keyframes load {\r\n    25% {\r\n      transform: translateY(-10px);\r\n    }\r\n    75% {\r\n      transform: translateY(10px);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <p>Error occurs</p>\r\n          {/* <details style={{ whiteSpace: 'pre-wrap' }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details> */}\r\n          <button\r\n            onClick={() => {\r\n              window.location.reload();\r\n            }}\r\n            style={{\r\n              background: \"none\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              boxShadow:\"1px 1px 1px grey\",\r\n              outline: \"none\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            Reload This Page\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport styled from 'styled-components';\r\nimport Loading from './Loading';\r\nimport ErrorBoundary from './ErrorBoundary.js';\r\nimport 'github-markdown-css';\r\nconst Wrapper = styled.div`\r\n  overflow-y: scroll;\r\n  -webkit-overflow-scrolling: touch;\r\n  width: 100%;\r\n  padding: 10px;\r\n  @media print {\r\n    padding: 0;\r\n    overflow-y: hidden;\r\n  }\r\n`;\r\nconst LazyPreview = lazy(() => import('./Preview.js'));\r\nexport default ({ source, children }) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <Suspense fallback={<Loading duration={0.5} />}>\r\n        <Wrapper className=\"preview  markdown-body\">\r\n          <LazyPreview source={source}>{children}</LazyPreview>\r\n        </Wrapper>\r\n      </Suspense>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport styled from 'styled-components';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/darcula.css';\r\nimport 'codemirror/mode/gfm/gfm.js';\r\nimport { initialText } from '../../../Container/Hooks/InitialText';\r\nconst Editor = ({ className, setText }) => {\r\n  return (\r\n    <CodeMirror\r\n      className={className}\r\n      value={initialText}\r\n      options={{\r\n        mode: 'gfm',\r\n        theme: 'darcula',\r\n        lineNumbers: true,\r\n        lineWrapping: true\r\n      }}\r\n      onChange={(editor, data, value) => {\r\n        setText(value);\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default styled(Editor)`\r\n  height: 100%;\r\n  .CodeMirror {\r\n    height: 100%;\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n","export const initialText = `# Markdown2PDF \r\nhttps://md2pdf.netlify.com/\r\n> Awesome Markdown to PDF!\r\n\\`\\`\\`diff\r\n- Online? Upload resume.md to stranger server?\r\n+ Try Offline Web App!\r\n\\`\\`\\`\r\n\r\n## How to use md2pdf?\r\n1. Click button choose \\`.md\\` file.\r\n2. Edit in editor (left panel).\r\n3. Click **Transform**!\r\n4. Switch 'Destination' to **Save as PDF**.\r\n4. **Chrome recommended**\r\n\r\n## Tips\r\n- \\`Resize\\` the layout what you want.\r\n- After click \\`Transform\\` button, inverse the checkbox of **'Headers and Footers'**. \r\n- **反選頁首與頁尾**.\r\n\r\n## What's special?\r\n- You can use <span style=\"color:#0984e3\">html</span> tag!\r\n<blockquote>Hey I'm in blockquote!</blockquote>\r\n\r\n## Profile\r\n- Github: [@realdennis](https://github.com/realdennis)\r\n- Project: md2pdf (Markdown2PDF)\r\n- What about me: ☕ 、 👨🏻‍💻️、 🍕、 🎞️\r\n\r\n## Code Like this\r\n\\`\\`\\`javascript\r\n// index.js\r\nfunction Hello(){\r\n  console.log('World!')\r\n}\r\nHello();\r\n\\`\\`\\`\r\n\r\nor this\r\n\r\n\\`\\`\\`python\r\n# main.py\r\ndef awesome():\r\n    print('awesome!')\r\nawesome()\r\n\\`\\`\\`\r\n\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst width = 15;\r\n\r\nconst UnwrappedDragBar = ({ className, setDrag, setStartX }) => {\r\n  const dragStart = e => {\r\n    const { nativeEvent } = e;\r\n    const offsetX = nativeEvent.offsetX;\r\n    setStartX(offsetX);\r\n  };\r\n  return (\r\n    <div\r\n      className={className}\r\n      onMouseDown={e => {\r\n        setDrag(true);\r\n        dragStart(e);\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default styled(UnwrappedDragBar)`\r\n  width: ${width + 'px'};\r\n  flex-shrink: 0;\r\n  background-color: ${props => (props.isDrag ? '#0984e3' : 'rgb(233,233,233)')};\r\n  height: 100%;\r\n  color: white;\r\n  text-align: center;\r\n  cursor: col-resize;\r\n  user-select: none;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import EditArea from './EditArea.js';\r\nimport Mirror from './MirrorEditor.js';\r\nconst Editor = ({ className,  setText, width }) => {\r\n  return (\r\n    <div style={{ width }} className={className}>\r\n      <Mirror setText={setText}/>\r\n    </div>\r\n  );\r\n};\r\nexport default styled(Editor)`\r\n  flex-shrink: 0;\r\n  height: 100%;\r\n  width: 50%;\r\n  color: rgb(204, 204, 204);\r\n`;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useDrop(ref, onLoad = () => {}) {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [isOver, setOver] = useState(false);\r\n  const stopDefault = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n  useEffect(() => {\r\n    const dragLeaveHandler = e => {\r\n      setOver(false);\r\n      stopDefault(e);\r\n    };\r\n    const dragOverHandler = e => {\r\n      setOver(true);\r\n      stopDefault(e);\r\n    };\r\n    const dropHandler = e => {\r\n      setOver(false);\r\n      stopDefault(e);\r\n      uploadHandler(e.dataTransfer.files);\r\n    };\r\n\r\n    const uploadHandler = files => {\r\n      if (\r\n        files &&\r\n        files[0] &&\r\n        files[0].name &&\r\n        /\\.(md)$/i.test(files[0].name) &&\r\n        !uploading\r\n      ) {\r\n        const reader = new FileReader();\r\n        reader.onload = e => {\r\n          setUploading(false);\r\n          onLoad(e.target.result);\r\n        };\r\n        reader.readAsText(files[0]);\r\n        setUploading(true);\r\n      }\r\n    };\r\n    const target = ref.current;\r\n    if (!target) return;\r\n    target.addEventListener('dragenter', stopDefault, true);\r\n    target.addEventListener('dragover', dragOverHandler, true);\r\n    target.addEventListener('dragleave', dragLeaveHandler, true);\r\n    target.addEventListener('drop', dropHandler, true);\r\n    return () => {\r\n      target.removeEventListener('dragenter', stopDefault, true);\r\n      target.removeEventListener('dragover', dragOverHandler, true);\r\n      target.removeEventListener('dragleave', dragLeaveHandler, true);\r\n      target.removeEventListener('drop', dropHandler, true);\r\n    };\r\n  }, [ref, onLoad, uploading, isOver]);\r\n  return [uploading, isOver];\r\n}\r\n\r\nexport default useDrop;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useProvided } from 'nonaction';\r\nimport { TextContainer } from '../../Container';\r\nimport Previewer from './Previewer';\r\nimport Editor from './Editor';\r\nimport DragBar from './DragBar.js';\r\nimport 'github-markdown-css';\r\nimport useDrop from '../../Container/Hooks/useDrop.js';\r\nimport uploadFile from '../../Lib/uploadFile.js';\r\nimport db from \"./db.json\"\r\n\r\nimport axios from \"axios\"\r\nimport _ from \"lodash\"\r\n\r\nconst Markdown = ({ className }) => {\r\n  const [active, SetActive] = useState(null);\r\n  const [loading, SetLoading] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [text, setText] = useProvided(TextContainer);\r\n  const [isDrag, setDrag] = useState(false);\r\n  const [startX, setStartX] = useState(0);\r\n  const [width, setWidth] = useState(window.innerWidth / 2);\r\n  const markdownRef = useRef(null);\r\n  const [uploading, isOver] = useDrop(markdownRef, uploadFile);\r\n  // Partial fileText & text\r\n\r\n  const fetch = () => {\r\n    SetLoading(\".......\")\r\n    axios.get(\"http://localhost:7000/post/getAll\").then((a) => {\r\n      console.log(\"a\", a)\r\n      a = _.get(a, \"data\");\r\n      console.log(\"a\", a)\r\n      const listItems = _.map(a, (it, index) => {\r\n        return <tr key={it.id} onClick={() => { setText(it.markdown); SetActive(index) }}>\r\n          <td>{index}</td>\r\n          <td>{it.date}</td>\r\n          <td>{it.name}</td>\r\n          <td>{_.get(it, \"articleType\")}</td>\r\n          <td onClick={() => { window.open(it.link) }}>Link</td>\r\n        </tr>\r\n      })\r\n      setItems(listItems)\r\n      SetLoading(\"\")\r\n    })\r\n  }\r\n\r\n  const fetch2 = () => {\r\n    SetLoading(\".......\")\r\n    console.log(db)\r\n    const listItems = _.map(db, (it, index) => {\r\n      return <tr key={it.id} onClick={() => { setText(it.markdown); SetActive(index) }}>\r\n        <td>{index}</td>\r\n        <td>{it.date}</td>\r\n        <td>{it.name}</td>\r\n        <td>{_.get(it, \"articleType\")}</td>\r\n        <td onClick={() => { window.open(it.link) }}>Link</td>\r\n      </tr>\r\n    })\r\n    setItems(listItems)\r\n    SetLoading(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleMouseUp = () => setDrag(false);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n    return () => {\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, []);\r\n  // The state `isDrag` must be false, when mouse up!\r\n  // So we listen it in window! (Seems ugly, but it just works ha.)\r\n  return (\r\n    <div\r\n      ref={markdownRef}\r\n      style={{ opacity: isOver || uploading ? 0.5 : 1 }}\r\n      className={className}\r\n      onMouseMove={e => {\r\n        if (!isDrag) return;\r\n        const pageX = e.nativeEvent.pageX;\r\n        setWidth(pageX - startX);\r\n      }}\r\n    >\r\n      <button onClick={fetch2} >\r\n        Load {loading}\r\n      </button>\r\n\r\n      <div id=\"customersWrap\">\r\n        <table id=\"customers\">\r\n          <thead className=\"fixedmenu\">\r\n            <tr>\r\n              <th>{active}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"tbody2\">\r\n            {items}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      {/* <Editor className=\"no-print\" width={width} setText={setText} /> */}\r\n      <DragBar\r\n        className=\"no-print\"\r\n        isDrag={isDrag}\r\n        setDrag={setDrag}\r\n        setStartX={setStartX}\r\n      />\r\n      <Previewer>{text}</Previewer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default styled(Markdown)`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  height: calc(100% - 40px);\r\n  display: flex;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Header, Markdown } from './Components';\r\nimport { Provider } from 'nonaction';\r\nimport { TextContainer } from './Container';\r\nconst App = ({ className }) => {\r\n  return (\r\n    <div className={className} id=\"md2pdf-app\">\r\n      <Provider inject={[TextContainer]}>\r\n        <Header />\r\n        <Markdown />\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default styled(App)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: 微軟正黑體, sans-serif;\r\n  @media print {\r\n    &,\r\n    div {\r\n      display: block;\r\n      height: auto;\r\n      /* Reset to normalize for FireFox */\r\n    }\r\n    .no-print,\r\n    .no-print * {\r\n      display: none !important;\r\n    }\r\n  }\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './styles.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nconst rootElement = document.getElementById('root');\r\n\r\n// [Prevent] The redirect of file drop\r\nwindow.addEventListener('drop', e => e.preventDefault(), true);\r\n// window.addEventListener('dragstart', e => e.preventDefault(), true);\r\nwindow.addEventListener('dragover', e => e.preventDefault(), true);\r\n// window.addEventListener('dragleave', e => e.preventDefault(), true);\r\nwindow.addEventListener('beforeunload', e => {\r\n  const msg = 'Please check and backup the change before refresh or leave.';\r\n  return ((e || window.event).returnValue = msg);\r\n});\r\n\r\nReactDOM.render(<App />, rootElement);\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}